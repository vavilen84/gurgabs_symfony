services:
  app.doctrine.encode_password_listener:
    class: App\Doctrine\EncodePasswordListener
    autowire: true
    tags:
      - { name: doctrine.event_subscriber }
security:
    providers:
      users:
        entity:
          # the class of the entity that represents users
          class: 'App\Entity\User'
          # the property to query by - e.g. username, email, etc
          property: 'email'
          # optional: if you're using multiple Doctrine entity
          # managers, this option defines which one to use
          # manager_name: 'customer'
    encoders:
      # use your user class name here
      App\Entity\User:
          # Use native password encoder
          # This value auto-selects the best possible hashing algorithm
          # (i.e. Sodium when available).
          algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            guard:
                authenticators:
                    - App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
